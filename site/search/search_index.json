{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio: \"Documentaci\u00f3n UDS Did\u00e1cticas de ASGBD\"","text":"<p>nav:</p>"},{"location":"#description","title":"Description","text":"<ul> <li>Pr\u00e1ctica   1: Documento AWS (ubuntu-mysql-apt-docker)</li> <li>Pr\u00e1ctica 2.1: MongoDB   AWS (apt)</li> <li>Pr\u00e1ctica 2.2: MongoDB   AWS (docker)</li> <li>Pr\u00e1ctica   4: Administraci\u00f3n y Fine-Tuning del Servidor MySQL</li> <li>Pr\u00e1ctica UD5 T4: Usuarios, permisos y roles</li> </ul>"},{"location":"Examen-22-11-24/examen-22-11-24/","title":"Examen-22-11-24","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#1-maquina-2-server-mysql","title":"1.- M\u00e1quina 2 (server-mysql)","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#cambiamos-el-prompt-del-terminal-y-instalamos-el-mysql-server","title":"Cambiamos el \"prompt\" del terminal y instalamos el mysql-server","text":"<p><code>sudo hostnamectl set-hostname sever-mysql</code></p> <p><code>sudo apt update</code></p> <p><code>sudo apt dist-upgrade -y</code></p> <p><code>sudo apt autoremove</code></p> <p><code>sudo apt install mysql-server -y</code></p> <p><code>sudo systemctl status mysql</code></p> <p>Para permitir que MySQL acepte conexiones desde cualquier IP, necesitamos modificar el archivo de configuraci\u00f3n de MySQL, espec\u00edficamente el par\u00e1metro <code>bind-address</code></p> <p>Accedemos al Archivo de Configuraci\u00f3n de Mysql: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <ul> <li>Modificamos el par\u00e1metro <code>bind-address</code></li> </ul> <p><code>text     De `bind-address = 127.0.0.1`     A `bind-address = 0.0.0.0`</code></p> <p></p> <ul> <li>Configuramos el idioma del servidor a espa\u00f1ol.</li> </ul> <pre><code>[mysqld]\nlc_messages = es_ES\n</code></pre> <p></p> <ul> <li>Habilitamos el log de consultas lentas en el mismo fichero de configuraci\u00f3n.</li> </ul> <pre><code>slow_query_log = 1\nlong_query_time = 3\nslow_query_log_file = /var/log/mysql/slow.log\n</code></pre> <p></p> <ul> <li>Configuramos optimizaciones de concurrencia y tablas en memoria.</li> </ul> <pre><code>innodb_buffer_pool_size = 1G\ninnodb_log_file_size = 256M\ntmp_table_size = 64M\nmax_heap_table_size = 64M\n</code></pre> <p></p> <p><code>sudo systemctl restart mysql.service</code></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#copiamos-nuestra-bbdd","title":"Copiamos nuestra BBDD","text":"<p>Desde nuestro terminal de la MV de AWS donde tenemos instalado mysql:</p> <p><code>git clone https://github.com/datacharmer/test_db.git</code></p> <p>Para importar los datos a nuestra instancia de MySQL, cargaremos los datos a trav\u00e9s de la herramienta de l\u00ednea de comandos mysql:</p> <p><code>cd test_db</code></p> <p><code>sudo mysql -t &lt; employees.sql</code></p> <p>En el server-mysql (M\u00e1quina 2) creamos los usuario que vamos a utilizar en el proyecto.</p> <p><code>sudo mysql -u root</code></p> <p><code>CREATE USER 'admin1'@'%' IDENTIFIED BY 'Root_pass1';</code></p> <p><code>CREATE USER 'prog1'@'%' IDENTIFIED BY 'Root_pass1';</code></p> <p><code>CREATE USER 'prog2'@'%' IDENTIFIED BY 'Root_pass1';</code></p> <p><code>CREATE USER 'prog3'@'%' IDENTIFIED BY 'Root_pass1';</code></p> <p><code>CREATE USER 'app'@'54.159.63.90' IDENTIFIED BY 'Root_pass1';</code></p> <p>Permitir hacer de todo y administrar permisos.</p> <p><code>GRANT ALL PRIVILEGES ON *.* TO 'admin1'@'%' WITH GRANT OPTION;</code></p> <p><code>GRANT ALL PRIVILEGES ON *.* TO 'prog1'@'%' WITH GRANT OPTION;</code></p> <p><code>GRANT CREATE USER ON *.* TO 'admin1'@'%';</code></p> <p><code>GRANT CREATE USER ON *.* TO 'prog1'@'%';</code></p> <p>Permitir hacer de todo.</p> <p><code>GRANT ALL PRIVILEGES ON *.* TO 'prog2'@'%';</code></p> <p><code>GRANT ALL PRIVILEGES ON *.* TO 'prog3'@'%';</code></p> <p>Damos al usuario <code>app</code> acceso limitado.</p> <p><code>GRANT SELECT ON *.* TO 'app'@'54.159.63.90';</code></p> <p>Comprobamos todos los usuarios creados.</p> <p><code>SELECT user, host from mysql.user;</code></p> <p></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#2-maquina-1-mysql-programador","title":"2.- M\u00e1quina 1 (mysql-programador)","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#cambiamos-el-prompt-del-terminal-y-instalamos-el-cliente-mysql","title":"Cambiamos el \"prompt\" del terminal y instalamos el cliente mysql","text":"<p><code>sudo hostnamectl set-hostname Mysql-programador</code></p> <p><code>sudo apt update</code></p> <p><code>sudo apt dist-upgrade -y</code></p> <p><code>sudo apt autoremove</code></p> <p><code>sudo apt install mysql-client -y</code></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#configuramos-el-acceso-para-el-usuario-app","title":"Configuramos el acceso para el usuario \"app\"","text":"<p>Probar conexi\u00f3n desde el mismo server-mysql con el usuario <code>app</code>.</p> <p><code>sudo mysql -u app -p</code></p> <p></p> <p>No podemos ya que el usuario <code>app</code> solo se puede conectar desde la M\u00e1quina1</p> <p>Usuario \"app\" con solo permisos de lectura y desde la M\u00e1quina 1 (si tiene permiso de conexi\u00f3n) intente borrar de la BBDD:</p> <p></p> <p>El \"prog1\" puede entrar y borrar un registro de la BBDD:</p> <p></p> <p>El \"prog2\" puede entrar y borrar un registro de la BBDD:</p> <p></p> <p>El \"prog3\" puede entrar y borrar un registro de la BBDD:</p> <p></p> <p>Con el usuario \"prog1\" puede quitar y cambiar los permisos del usuario \"prog2\".</p> <p> </p>"},{"location":"Examen-22-11-24/examen-22-11-24/#3-maquina-3","title":"3.- M\u00e1quina 3","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#cambiamos-el-prompt-del-terminal-e-instalamos-docker","title":"Cambiamos el \"prompt\" del terminal e instalamos \"docker\"","text":"<p><code>sudo hostnamectl set-hostname server-docker</code></p> <p><code>sudo apt update</code></p> <p><code>sudo apt dist-upgrade -y</code></p> <p><code>sudo apt autoremove</code></p> <p><code>sudo apt install -y apt-transport-https ca-certificates curl software-properties-common</code></p> <p><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</code></p> <p><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></p> <p><code>sudo apt update</code></p> <p><code>sudo apt install -y docker-ce docker-ce-cli containerd.io</code></p> <p><code>sudo systemctl start docker</code></p> <p><code>sudo usermod -aG docker $USER</code></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#descargamos-e-iniciamos-un-contenedor-mysql","title":"Descargamos e iniciamos un \"contenedor mysql\"","text":"<p>Descarga la imagen oficial de MySQL:</p> <p><code>sudo docker pull mysql:latest</code></p> <p><code>sudo docker run --name mysql-docker -e MYSQL_ROOT_PASSWORD=Root_pass1 -d mysql:latest</code></p> <p>Comprobamos.</p> <p><code>sudo docker ps</code> <code>sudo docker exec -it mysql-docker mysql -u root -p</code></p> <p>Vemos que nos podemos conectar desde la misma M\u00e1quina de docker:</p> <p></p> <p>Desde la M\u00e1quina del programador NO.</p> <p><code>mysql -h 98.85.175.167 -u root -p</code></p> <p></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#4-maquina-4","title":"4.- M\u00e1quina 4","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#cambiamos-el-prompt-del-terminal-e-instalamos-mongo","title":"Cambiamos el \"prompt\" del terminal e instalamos \"Mongo\"","text":"<p><code>sudo hostnamectl set-hostname server-mongo</code></p> <p><code>sudo apt update</code></p> <p><code>sudo apt dist-upgrade -y</code></p> <p><code>sudo apt autoremove</code></p> <p><code>sudo apt install gnupg curl</code></p> <p><code>curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor</code></p> <p>Para Ubuntu 22.04.</p> <p><code>echo \"deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list</code> </p> <p><code>sudo apt update</code></p> <p><code>sudo apt install -y mongodb-org</code></p> <p><code>sudo systemctl start mongod</code></p> <p><code>mongosh</code></p> <p></p> <p>Editamos el archivo de configuraci\u00f3n de MongoDB \"/etc/mongod.conf\" para permitir solo conexiones desde cualquier m\u00e1quina.</p> <p>Pero \u00e9sta debe tener instalado <code>mongosh</code></p> <p><code>sudo nano /etc/mongod.conf</code></p> <p><code>bindIp: 0.0.0.0</code></p> <p></p> <p><code>sudo systemctl restart mongod.service</code></p> <p>Comprobamos desde la M\u00e1quina 2.</p> <p><code>mongosh --host 98.85.180.194 -port 27017</code></p> <p></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#cambios-en-caliente-para-el-black-friday","title":"Cambios en caliente para el Black Friday","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#reducimos-el-tiempo-de-conexion-a-5-minutos","title":"Reducimos el tiempo de conexi\u00f3n a 5 minutos","text":""},{"location":"Examen-22-11-24/examen-22-11-24/#ajustamos-los-parametros-en-caliente-mediante-los-siguientes-comandos","title":"Ajustamos los par\u00e1metros en caliente mediante los siguientes comandos","text":"<p>Nos conectamos al servidor-mysql como administrador.</p> <p><code>mysql -u admin1 -p</code></p> <p><code>SET GLOBAL wait_timeout = 300;</code></p> <p><code>SET GLOBAL interactive_timeout = 300;</code></p> <p></p> <p>Pero estas no funcionan en caliente, ya que si las comprobamos vemos que para que se apliquen tendr\u00edamos que hacerlas en el fichero <code>sudo nano /etc/mysql/my.cnf</code></p> <p>Comprobamos.</p> <p><code>SHOW VARIABLES LIKE 'wait_timeout';</code></p> <p></p> <p><code>SHOW VARIABLES LIKE 'interactive_timeout';</code></p> <p></p> <p>Estos valores permanecer\u00e1n activos mientras el servidor est\u00e9 en ejecuci\u00f3n. Para que sean permanentes, deberemos actualizar el archivo de configuraci\u00f3n m\u00e1s adelante cuando sea posible reiniciar el servidor.</p>"},{"location":"Examen-22-11-24/examen-22-11-24/#registraremos-todas-las-consultas-sin-reiniciar-el-servidor","title":"Registraremos todas las consultas sin reiniciar el servidor","text":"<p>Habilitamos el registro general:</p> <p><code>SET GLOBAL general_log = 'ON';</code></p> <p>Define el archivo donde se almacenar\u00e1n las consultas si no est\u00e1 configurado:</p> <p><code>SET GLOBAL general_log_file = '/var/log/mysql/general.log';</code></p> <p></p> <p>Comprobamos.</p> <p><code>SHOW VARIABLES LIKE 'general_log';</code></p> <p></p> <p><code>SHOW VARIABLES LIKE 'general_log_file';</code></p> <p></p> <p>Si queremos monitorear las consultas.</p> <p><code>tail -f /var/log/mysql/general.log</code></p> <p>Desactivaremos el log general despu\u00e9s del evento para evitar un crecimiento innecesario del archivo:</p> <p><code>SET GLOBAL general_log = 'OFF';</code></p> <p></p> <p>Comprobamos.</p> <p><code>SHOW VARIABLES LIKE 'general_log';</code></p> <p></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#cambiamos-los-permisos-del-programador-prog3","title":"Cambiamos los permisos del programador \"prog3\"","text":"<p>Los permisos de un usuario pueden modificarse en caliente sin reiniciar el servidor:</p> <p>Accedemos como administrador:</p> <p><code>mysql -u admin1 -p</code></p> <p>Revocamos todos los permisos de \"prog3\":</p> <p><code>REVOKE ALL PRIVILEGES ON *.* FROM 'prog3'@'%';</code></p> <p>Otorgamos permisos SELECT  (lectura) \u00fanicamente:</p> <p><code>GRANT SELECT ON *.* TO 'prog3'@'%';</code></p> <p>Comprobamos.</p> <p><code>show grants for 'prog3'@'%';</code></p> <p></p>"},{"location":"Examen-22-11-24/examen-22-11-24/#eliminar-al-programador-prog2","title":"Eliminar al programador \"prog2\"","text":"<p>Accedemos como administrador:</p> <p><code>mysql -u admin1 -p</code></p> <p>Borramos al usuario \"prog2\" y lo comprobamos:</p> <p><code>DROP USER 'prog2'@'%';</code></p> <p><code>select user, host from mysql.user;</code></p> <p></p>"},{"location":"PracUD1AWS/Documento%20detallado/","title":"Detalle","text":""},{"location":"PracUD1AWS/Documento%20detallado/#parte-1-configuramos-en-aws-con-ubuntu-y-mysql-con-apt-install","title":"PARTE 1: Configuramos en AWS con ubuntu y mysql (con apt install)","text":""},{"location":"PracUD1AWS/Documento%20detallado/#configuramos-el-acceso-desde-el-host-por-ssh-primero-al-equipo-ubuntu-y-a-mysql-desde-este","title":"Configuramos el acceso desde el host por ssh primero al equipo ubuntu y a mysql desde \u00e9ste:","text":""},{"location":"PracUD1AWS/Documento%20detallado/#instalamos-mysql","title":"Instalamos Mysql","text":"<p><code>sudo apt update</code></p> <p><code>sudo apt dist-upgrade -y</code></p> <p><code>sudo apt install mysql-server -y</code></p>"},{"location":"PracUD1AWS/Documento%20detallado/#configuramos-contrasena-para-el-usuario-root","title":"Configuramos contrase\u00f1a para el usuario root:","text":"<p><code>sudo su</code></p> <p><code>select user, host, plugin from user;</code></p> <p><code>alter user 'root'@'localhost' identified with caching_sha2_password by 'contrase\u00f1a';</code></p> <p><code>flush privileges;</code></p> <p></p>"},{"location":"PracUD1AWS/Documento%20detallado/#accedemos-al-archivo-de-configuracion-para-permitir-conexiones-remotas-modificando-la-opcion","title":"Accedemos al archivo de configuraci\u00f3n para permitir conexiones remotas modificando la opci\u00f3n:","text":"<p>bind-address: 0.0.0.0</p> <p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p></p>"},{"location":"PracUD1AWS/Documento%20detallado/#reiniciamos-mysql","title":"Reiniciamos mysql:","text":"<p><code>sudo systemctl restart mysql.service</code></p> <p>Comprobamos los puertos que tenemos abiertos en el firewall ufw y habilitamos el puerto 3306:</p> <p><code>sudo ufw status</code></p> <p><code>sudo ufw allow 3306</code></p> <p></p> <p>Creamos un usuario para podernos conectar desde cualquier IP y le damos permisos:</p> <p><code>create user 'usuario'@'%' identified by 'contrase\u00f1a';</code></p> <p><code>grant all privileges on *.* to 'usuario'@'%';</code></p> <p><code>flush privileges;</code></p> <p><code>select user, host, from mysql.user;</code></p> <p></p>"},{"location":"PracUD1AWS/Documento%20detallado/#ajustamos-reglas-del-grupo-de-seguridad-en-aws-mysql-en-puerto-3306","title":"Ajustamos reglas del Grupo de Seguridad en AWS (MySQL en puerto 3306):","text":"<p>Que lo tenemos indicado en el resumen inicial de la instancia. Asignar los permisos en el host para el fichero de la clave .pem:</p> <p><code>sudo chmod 400 /ruta del fichero.pem</code></p> <p>Conectamos por ssh a la MV AWS:</p> <p><code>ssh -i /ruta/a/tu-clave.pem ubuntu@&lt;DNS de IPv4 p\u00fablica&gt; (resumen de la instancia)</code></p> <p></p> <p>Utilizamos el usuario que hemos creado para podernos conectar desde cualquier IP:</p> <p></p>"},{"location":"PracUD1AWS/Documento%20detallado/#parte-2-vamos-a-crear-una-instancia-en-aws-ec2","title":"PARTE 2: Vamos a crear una instancia en AWS EC2","text":""},{"location":"PracUD1AWS/Documento%20detallado/#donde-podamos-ejecutar-mysql-server-en-un-contenedor-docker-y-acceder-desde-nuestro-host-local-a-traves-del-puerto-3307","title":"Donde podamos ejecutar MySQL Server en un contenedor Docker y acceder desde nuestro host local a trav\u00e9s del puerto 3307:","text":"<p>Accedemos al grupo de seguridad y editamos las reglas para agregar una y poder abrir el puerto 3306 (mysql) y 3307/tcp para permitir el acceso a \u00e9ste desde nuestro host:</p> <p></p> <p>Conectamos y verificamos que la tenemos actualizada:</p> <p><code>sudo apt update &amp;&amp; sudo apt dist-upgrade -y</code></p> <p>Instalamos Docker</p> <p><code>sudo apt install docker.io</code></p> <p>Nos aseguramoa que docker est\u00e1 en ejecuci\u00f3n</p> <p></p> <p>Reiniciamos</p> <p><code>sudo reboot</code></p> <p>Descargamos la imagen de mysql</p> <p><code>docker versi\u00f3n</code></p> <p><code>sudo docker pull mysql:latest</code></p> <p></p> <p>Una vez tengamos descargada la imagen, iniciaremos el contenedor de MySQL y mapearemos el puerto 3307 de la instancia EC2 al puerto 3306 del contenedor:</p> <p><code>sudo docker run -d --name nombre-del-contenedor -e MYSQL_ROOT_PASSWORD=contrase\u00f1a -p 3307:3306 mysql</code></p> <p></p> <p>Con esto hacemos lo siguiente</p> <pre><code>\u2022 -d: Ejecutamos el contenedor en modo separado .\n\u2022 --name mysql-contenedor : Asigna un nombre al contenedor.\n\u2022 -e MYSQL_ROOT_PASSWORD=mi_contrase\u00f1a: Establecemos la contrase\u00f1a del usuario root de MySQL.\n\u2022 -p 3307:3306: Mapeamos el puerto 3307 de la instancia EC2 al puerto 3306 del contenedor MySQL.\n</code></pre> <p>Verificamos</p> <p><code>sudo docker ps</code></p> <p></p> <p>Nos conectamos desde nuestro host a la instancia de AWS-docker-mysql por medio de la IP publica de \u00e9sta y por el puerto 3307:</p> <p><code>mysql -u root -p -h ip-p\u00fablica -P 3307</code></p> <p><code>select user, host, from mysql.user;</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/","title":"Pr\u00e1ctica 2.1: MongoDB (apt)","text":""},{"location":"PracUD2MONGO/Documento%20detallado-apt/#instalacion-y-configuracion-avanzada-de-mongodb","title":"Instalaci\u00f3n y Configuraci\u00f3n Avanzada de MongoDB","text":""},{"location":"PracUD2MONGO/Documento%20detallado-apt/#configuramos-la-primera-instancia-con-ubuntu-donde-lo-instalaremos-con-apt-install-mongodb","title":"Configuramos la primera instancia con ubuntu donde lo instalaremos (con apt install) mongoDB","text":"<p>Verificamos la conectividad entre nuestro host y la MV AWS (apt):</p> <p><code>ssh -i /ruta/a/clave .pem ubuntu@&lt;ip-p\u00fablica&gt;</code></p> <p></p> <p>An\u00e1lisis y selecci\u00f3n del SGBD:</p> <p>Versi\u00f3n m\u00e1s adecuada para mi entorno como estudiante es la MongoDB Community Edition, por las siguientes razones:</p> <ul> <li>Es totalmente gratuita y de c\u00f3digo abierto, lo que la hace ideal para estudiantes y proyectos acad\u00e9micos que no tienen recursos para pagar licencias.</li> <li>Es muy estable y recibe actualizaciones y parches de seguridad de forma regular. Esto garantiza que los estudiantes utilicen una versi\u00f3n s\u00f3lida y segura, perfecta para aprender sin sacrificar la funcionalidad.</li> <li>Funciona en m\u00faltiples sistemas operativos (Windows, macOS y Linux), lo cual es \u00fatil para estudiantes que pueden estar trabajando con diferentes plataformas. La Community Edition tambi\u00e9n permite el uso de herramientas gratuitas como MongoDB Compass para la administraci\u00f3n gr\u00e1fica.</li> <li>Proporciona las funcionalidades clave de MongoDB, como las consultas flexibles de JSON, el soporte para \u00edndices y la capacidad de replicaci\u00f3n. Esto permite a los estudiantes aprender conceptos fundamentales de bases de datos NoSQL, como la esca-labilidad.</li> </ul>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#instalacion-de-mongodb-con-apt-en-ubuntu","title":"Instalaci\u00f3n de MongoDB con <code>apt</code> en Ubuntu","text":""},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-1-actualizar-los-paquetes-e-importar-la-clave-publica","title":"Paso 1: Actualizar los paquetes e importar la clave p\u00fablica","text":"<p><code>sudo apt update</code></p> <p><code>sudo apt-get install gnupg curl</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-2-importar-la-clave-gpg-de-mongodb","title":"Paso 2: Importar la clave GPG de MongoDB","text":"<p><code>curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | \\    sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg \\    --dearmor</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-3-creamos-el-archivo-de-lista-para-ubuntu-2204-jammy","title":"Paso 3: Creamos el archivo de lista para Ubuntu 22.04 (Jammy)","text":"<p><code>echo \"deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-4-recargamos-la-bbdd-de-paquetes","title":"Paso 4: Recargamos la BBDD de paquetes","text":"<p><code>sudo apt-get update</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-5-instalamos-la-ultima-version-estable","title":"Paso 5: Instalamos la ultima versi\u00f3n estable","text":"<p><code>sudo apt-get install -y mongodb-org</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-6-iniciar-el-servicio-de-mongodb","title":"Paso 6: Iniciar el servicio de MongoDB","text":"<p><code>sudo systemctl start mongod</code></p> <p>Si recibe un error similar al siguiente al iniciar <code>mongod</code></p> <p>Failed to start mongod.service: Unit mongod.service not found.</p> <p>Primero ejecute el siguiente comando:</p> <p><code>sudo systemctl daemon-reload</code></p> <p>Luego ejecute nuevamente el comando de inicio anterior.</p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-7-verificar-el-estado-del-servicio","title":"Paso 7: Verificar el estado del servicio","text":"<p><code>sudo systemctl status mongod</code></p> <p>Podemos parar MongoDB:</p> <p><code>sudo systemctl stop mongod</code></p> <p>Para reiniciar MongDB:</p> <p><code>sudo systemctl restart mongod</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-8-habilitar-mongodb-para-que-inicie-al-arrancar-el-sistema","title":"Paso 8: Habilitar MongoDB para que inicie al arrancar el sistema","text":"<p><code>sudo systemctl enable mongod</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#paso-9-verificar-la-conexion-a-mongodb","title":"Paso 9: Verificar la conexi\u00f3n a MongoDB","text":"<p>Para confirmar que MongoDB est\u00e1 funcionando correctamente, puedes ejecutar el cliente de MongoDB y ver si se conecta poder comenzar a utilizarlo:</p> <p><code>mongosh</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#configuracion-de-la-conectividad-de-red-en-mongodb-apt-para-permitir-conexiones-remotas","title":"Configuraci\u00f3n de la conectividad de red en MongoDB (apt) para permitir conexiones remotas","text":""},{"location":"PracUD2MONGO/Documento%20detallado-apt/#editamos-el-archivo-de-configuracion-de-mongodb","title":"Editamos el archivo de configuraci\u00f3n de MongoDB","text":"<p><code>sudo nano /etc/mongod.conf</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#modificamos-la-opcion-bindip","title":"Modificamos la opci\u00f3n <code>bindIp</code>","text":"<ul> <li>Buscamos la l\u00ednea que contiene <code>bindIp: 127.0.0.1</code> .Esta l\u00ednea configura MongoDB para que solo escuche en la interfaz de localhost.</li> <li>Cambia el valor a <code>0.0.0.0</code> para permitir que MongoDB escuche en todas las interfaces de red:</li> </ul> <pre><code>net:\n  port: 27017\n  bindIp: 0.0.0.0\n</code></pre> <p>Nota: <code>bindIp: 0.0.0.0</code> permite que MongoDB acepte conexiones desde cualquier IP.</p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#reiniciamos-mongodb","title":"Reiniciamos MongoDB","text":"<p><code>sudo systemctl restart mongod</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#configurar-el-firewall-opcional","title":"Configurar el Firewall (Opcional)","text":"<p>Si tenemos el firewall habilitado, permitiremos el acceso al puerto <code>27017</code> para conexiones remotas:</p> <p><code>sudo ufw allow 27017</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#verificar-la-conectividad-remota","title":"Verificar la conectividad remota","text":"<p>Desde otra m\u00e1quina intentaremos conectarnos al servidor de MongoDB usando 'mongosh' con la IP de la m\u00e1quina donde MongoDB est\u00e1 instalado.</p> <p><code>mongosh --host &lt;IP del servidor&gt; --port 27017</code></p> <p>Si la conexi\u00f3n es correcta, MongoDB est\u00e1 configurado correctamente para conexiones remotas.</p> <p>En nuestro host.</p> <ul> <li>Comprobaremos en nuestro firewall que tenemos el puerto 27017 habilitado</li> <li>Instalaremos mogosdb-mongosh</li> </ul> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#gestion-de-cuentas-de-usuario-y-permisos","title":"Gesti\u00f3n de cuentas de usuario y permisos","text":"<p>Creamos un usuario que tenga permiso para conectarse desde la otra m\u00e1quina.</p> <p><code>mongosh</code></p> <p><code>test&gt; use admin</code></p> <pre><code>db.createUser({\n  user: \"admin_user\",\n  pwd: \"securePassword\",\n  roles: [\n    { role: \"root\", db: \"admin\" }\n  ]\n});\n</code></pre> <p></p> <p>Y hay que tener en cuenta de tener de cambiar el valor a <code>0.0.0.0</code> para permitir que MongoDB escuche en todas las interfaces de red:</p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#conectaremos-desde-otra-maquina-host-con-el-usuario-administrador-de-mongodb-apt","title":"Conectaremos desde otra m\u00e1quina (host) con el usuario administrador de MongoDB (apt)","text":"<p><code>mongosh --host &lt;IP_del_servidor&gt; --port 27017 -u \"admin_user\" -p \"securePassword\" --authenticationDatabase \"admin\"</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-apt/#verificacion-de-la-conectividad-entre-maquinas","title":"Verificaci\u00f3n de la conectividad entre m\u00e1quinas","text":"<ul> <li>Nos conectamos desde la MV-AWS (apt) a la MV-AWS (docker)</li> </ul> <p>1.-Copiamos desde nuestro host el fichero .pem en la MV-AWS (apt) para poder conectarnos posteriormente a la MV-AWS (docker)</p> <p><code>sudo scp -i &lt;/path/to/clave.pem&gt; &lt;/path/to/clave.pem&gt; ubuntu@&lt;IP del servidor&gt;:.</code></p> <p></p> <p>2.-Nos conectamos desde la MV-AWS (apt) a la MV-AWS (docker) con el fichero .pem</p> <p><code>sudo ssh -i &lt;clave.pem&gt; ubuntu@&lt;IP del servidor&gt;</code></p> <p></p> <p>3.-Ejecutamos el contenedor en bash</p> <p><code>sudo docker exec -it &lt;nombre-contenedor&gt; bash</code></p> <p></p> <p>4.-Nos conectamos al usuario de la BBDD de mongoDB</p> <p><code>mongosh -u &lt;user&gt; -p &lt;password&gt;</code></p> <p></p> <ul> <li>Desde el host a la MV-AWS (docker)</li> </ul> <p>1.-Primero nos conectamos por ssh -i a la MV-AWS (docker)</p> <p><code>sudo ssh -i &lt;clave.pem&gt; ubuntu@&lt;ip del servidor&gt;</code></p> <p></p> <p>2.-Ejecutamos el contenedor en bash</p> <p><code>sudo docker exec -it &lt;nombre-contenedor&gt; bash</code></p> <p></p> <p>3.-Nos conectamos al usuario de la BBDD de mongoDB</p> <p><code>mongosh -u &lt;user&gt; -p &lt;password&gt;</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/","title":"Pr\u00e1ctica 2.2: MongoDB (docker)","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#instalacion-y-configuracion-avanzada-de-mongodb","title":"Instalaci\u00f3n y Configuraci\u00f3n Avanzada de MongoDB","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#configuramos-la-primera-instancia-con-ubuntu-donde-lo-instalaremos-usando-docker","title":"Configuramos la primera instancia con ubuntu donde lo instalaremos usando Docker","text":"<p>Verificamos la conectividad entre nuestro host y la MV (mongo-docker):</p> <p><code>ssh -i /ruta/a/clave .pem (ejem:ubuntu)@ip-p\u00fablica</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#instalacion-de-mongodb-usando-docker","title":"Instalaci\u00f3n de MongoDB usando <code>Docker</code>","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-1-actualizar-los-paquetes","title":"Paso 1: Actualizar los paquetes","text":"<p><code>sudo apt update</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-2-instalamos-docker","title":"Paso 2: Instalamos Docker","text":"<p><code>sudo apt install docker.io</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-3-descargamos-la-imagen-de-mongodb-desde-docker-hub","title":"Paso 3: Descargamos la imagen de MongoDB desde Docker Hub","text":"<p><code>sudo docker pull mongo</code></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-4-creamos-y-ejecutamos-un-contenedor-con-mongodb","title":"Paso 4: Creamos y ejecutamos un contenedor con MongoDB","text":"<p><code>sudo docker run --name nombre-contenedor -d -p 27017:27017 mongo</code></p> <p>Este comando nos crear\u00e1 un contenedor en segundo plano con el nombre <code>nombre-contenedor</code>, asignado el puerto 27017 del host al contenedor</p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-5-verificamos-que-el-contenedor-esta-en-ejecucion","title":"Paso 5: Verificamos que el contenedor est\u00e1 en ejecuci\u00f3n","text":"<p><code>docker ps</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-6-acceder-al-cliente-de-mongodb-dentro-del-contenedor","title":"Paso 6: Acceder al cliente de MongoDB dentro del contenedor","text":"<p>Podemos abrir una terminal dentro del contenedor y veriricar que MongoDB funciona:</p> <p><code>docker exec -it 'nombre-contenedor' mongosh</code></p> <p></p> <p>Si el cliente de MongoDB se abre y muestra la conexi\u00f3n correcta, significa que MongoDB se nos est\u00e1 ejecutando correctamente en el contenedor.</p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#cambio-del-puerto-de-mongodb","title":"Cambio del puerto de MongoDB","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-1-detener-y-eliminar-el-contenedor-de-mongodb-actual-que-ya-esta-ejecutandose","title":"Paso 1: Detener y eliminar el contenedor de MongoDB actual que ya est\u00e1 ejecut\u00e1ndose","text":"<p><code>docker stop 'nombre-contenedor'</code></p> <p><code>docker rm 'nombre-contenedor'</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-2-crear-un-nuevo-contenedor-con-el-puerto-cambiado","title":"Paso 2: Crear un Nuevo Contenedor con el Puerto Cambiado","text":"<p>Vamos a crear un nuevo contenedor y especificar un puerto diferente al predeterminado (por ejemplo, usaremos el puerto <code>28000</code>).</p> <p><code>docker run -d --name 'nombre-contenedor' -p 28000:27017 mongo</code></p> <p>Aqu\u00ed hemos indicado que el puerto 28000 de la m\u00e1quina anfitriona est\u00e9 asociado al puerto interno 27017 del contenedor, el cual es el puerto que MongoDB usa por defecto dentro del contenedor. MongoDB seguir\u00e1 escuchando en 27017 dentro del contenedor, pero externamente accederemos mediante 28000.</p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-3-verificamos-la-conexion-con-el-nuevo-puerto","title":"Paso 3: Verificamos la conexi\u00f3n con el nuevo puerto","text":"<p><code>mongosh --port 28000</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#configuracion-de-la-conectividad-de-red-en-mongodb-docker-para-no-permitir-conexiones-remotas","title":"Configuraci\u00f3n de la conectividad de red en MongoDB (docker) para NO permitir conexiones remotas","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#paso-1-iniciamos-el-contenedor-mongodb-sin-exponer-el-puerto-en-el-host","title":"Paso 1: Iniciamos el contenedor MongoDB sin exponer el puerto en el host","text":"<p>Ejecuta MongoDB en Docker sin especificar el mapeo del puerto (evitando -p 27017:27017):</p> <p><code>docker run -d --name 'nombre-contenedor' mongo</code></p> <p>Esto har\u00e1 que MongoDB est\u00e9 disponible solo dentro del contenedor y no sea accesible desde otras m\u00e1quinas</p> <p>Verificamos el estado del contenedor para confirmar que est\u00e1 en ejeuci\u00f3n, pero sin puertos espuestos</p> <p></p> <p>En la columna <code>PORTS</code>, deberemos ver que no se muestra ning\u00fan puerto para <code>otro-contenedor</code>, indicando que no hay acceso al puerto <code>27017</code> desde el exterior del contenedor</p> <p>Para configurar MongoDB en Docker y no permitir conexiones remotas, debemos ajustar la configuraci\u00f3n de MongoDB para que escuche solo en la interfaz localhost (127.0.0.1). Esto garantiza que MongoDB acepte conexiones \u00fanicamente desde la misma m\u00e1quina anfitriona o desde el propio contenedor.</p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#ejecutaremos-mongodb-en-docker-con-la-configuracion-de-localhost","title":"Ejecutaremos MongoDB en Docker con la configuraci\u00f3n de localhost","text":"<p>Con la imagen que tenemos de MongoDB de Docker, crearemos un contenedor que use el archivo de configuraci\u00f3n mongod.conf o directamente especificar la IP de 127.0.0.1.</p> <p>Especificaremos bindIp directamente en el comando de inicio</p> <p><code>docker run -d --name &lt;nombre-contenedor&gt; -p 127.0.0.1:27017 mongo --bind_ip 127.0.0.1</code></p> <p>Usaremos un firewall (ufW) para bloquear el acceso externo</p> <ul> <li> <p>Habilitamos el firewall     <code>sudo ufw enable</code></p> </li> <li> <p>Bloqueamos cualquier acceso externo al puerto 27017     <code>sudo ufw deny 27017</code></p> </li> <li> <p>Confirmamos que las reglas se han aplicado correctamente     <code>sudo ufw status</code></p> </li> </ul> <p></p> <p>Verificamos que MongoDB no sea accesible externamente</p> <p></p> <p>NO PODEMOS ACCEDER</p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#gestion-de-cuentas-de-usuario-y-permisos","title":"Gesti\u00f3n de cuentas de usuario y permisos","text":""},{"location":"PracUD2MONGO/Documento%20detallado-docker/#creamos-un-usuario-en-mongodb-docker-que-tenga-permiso-para-conectarse-desde-la-otra-maquina","title":"Creamos un usuario en MongoDB (docker) que tenga permiso para conectarse desde la otra m\u00e1quina","text":"<p><code>docker exec -it &lt;nombre-contenedor mongosh</code></p> <p><code>test&gt; use admin</code></p> <p><code>db.createUser({user: \"admin_user\", pwd: \"securePassword\", roles: [ { role: \"root\", db: \"admin\" } ]});</code></p> <p></p>"},{"location":"PracUD2MONGO/Documento%20detallado-docker/#verificacion-de-la-conectividad-entre-maquinas","title":"Verificaci\u00f3n de la conectividad entre m\u00e1quinas","text":"<ul> <li>Nos conectamos desde la MV-AWS (docker) a la MV-AWS (apt)</li> </ul> <ul> <li>Desde el HOST a la MV-AWS (apt)</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/","title":"Pr\u00e1ctica 4: Administraci\u00f3n y Fine-Tuning del Servidor MySQL","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#1-configuracion-inicial","title":"1 - Configuraci\u00f3n inicial","text":"<p><code>sudo apt update</code></p> <p><code>sudo apt install mysql-server -y</code></p> <p><code>sudo systemctl status mysql</code></p> <p></p> <p>Habilitamos MySQL para que se inicie autom\u00e1ticamente al arrancar el sistema:</p> <p><code>sudo systemctl enable mysql</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#12-configuramos-la-conectividad-en-red","title":"1.2 - Configuramos la conectividad en red","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p></p> <p>Esto nos permite que MySQL acepte conexiones desde cualquier direcci\u00f3n IP. Guardamos y reiniciamos mysql</p> <p><code>sudo systemctl restart mysql</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#13-configuramos-una-regla-de-seguridad-para-permitir-el-trafico-en-el-puerto-3306-mysql","title":"1.3.- Configuramos una regla de seguridad para permitir el tr\u00e1fico en el puerto 3306 (MySQL)","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#14-establecemos-la-contrasena-inicial-para-root","title":"1.4 - Establecemos la contrase\u00f1a inicial para root","text":"<p><code>sudo mysql -u root</code></p> <p><code>alter user 'root'@'localhost' identified with mysql_native_password BY 'contrase\u00f1a';</code></p> <p><code>flush privileges;</code></p> <p><code>exit</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#15-creamos-un-nuevo-usuario-con-acceso-desde-cualquier-ip-y-le-otorgarmos-permisos","title":"1.5 - Creamos un nuevo usuario con acceso desde cualquier IP y le otorgarmos permisos","text":"<p><code>mysql -u root -p</code></p> <p><code>create user 'nuevo_usuario'@'%' identified by 'contrase\u00f1a';</code></p> <p><code>grant all privileges on *.* TO 'nuevo_usuario'@'%';</code></p> <p><code>flush privileges;</code></p> <p><code>exit</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#16-verificamos-la-conectividad-remota","title":"1.6 - Verificamos la conectividad remota","text":"<p>Probaremos la conexi\u00f3n desde otra m\u00e1quina usando el cliente MySQL creado:</p> <p><code>mysql -u nuevo_usuario -p -h &lt;ip-del-servidor&gt; -P 3306</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#17-aseguramos-las-cuentas-de-administracion","title":"1.7 - Aseguramos las cuentas de administraci\u00f3n","text":"<p><code>sudo mysql_secure_installation</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#2-modificamos-la-configuracion-del-servidor","title":"2 - Modificamos la configuraci\u00f3n del servidor","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#21-verificamos-la-memoria-total-disponible-en-el-servidor","title":"2.1 - Verificamos la memoria total disponible en el servidor","text":"<p><code>free -h</code></p> <p></p> <p><code>sudo nano /etc/mysql/my.cnf</code></p> <p></p> <p><code>innodb_buffer_pool_size</code></p> <ul> <li>Ajustamos este par\u00e1metro seg\u00fan la memoria disponible en nuestro servidor (70-80% de la memoria total), en nuestro caso hemos aplicado un 70%.</li> <li>Dividimos el <code>buffer pool</code> para mejorar la concurrencia.</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#guardamos-los-cambios-y-reiniciamos-mysql","title":"Guardamos los cambios y reiniciamos MySQL","text":"<p><code>sudo systemctl restart mysql</code></p> <p>Comprobamos el estado</p> <p><code>sudo systemctl status myql</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#22-verificamos-los-cambios","title":"2.2 - Verificamos los cambios","text":"<p><code>mysql&gt; \"SHOW VARIABLES LIKE 'innodb_buffer_pool%';</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#3-activacion-y-configuracion-de-los-registros","title":"3 - Activaci\u00f3n y configuraci\u00f3n de los registros","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#31-activamos-el-registro-de-consultas-lentas","title":"3.1 - Activamos el registro de consultas lentas","text":"<ul> <li><code>slow_query_log</code> : Activa el registro de consultas lentas.</li> <li><code>long_query_time</code> : Establece el umbral de tiempo para que una consulta se considere lenta (en segundos).</li> <li><code>slow_query_log_file</code> : Define la ubicaci\u00f3n y el nombre del archivo donde se guardar\u00e1n las consultas lentas.</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#32-activamos-el-registro-de-consultas-lentas","title":"3.2 - Activamos el registro de consultas lentas","text":"<p><code>SET GLOBAL slow_query_log = 'ON';</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#33-establecemos-un-umbral-de-tiempo-de-2-segundos-para-considerar-una-consulta-como-lenta","title":"3.3 - Establecemos un umbral de tiempo de 2 segundos para considerar una consulta como lenta","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#previamente-editamos-este-fichero-para-establecer-el-valor-persistente-a-2-segundos","title":"Previamente editamos este fichero para establecer el valor persistente a 2 segundos","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p>Descomentamos el valor en [mysqld]</p> <p></p> <p>Guardamos y reiniciamos mysql</p> <p><code>sudo systemctl restart mysql</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#ya-en-mysql","title":"Ya en mysql","text":"<p><code>SET GLOBAL long_query_time = 2;</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#34-activamos-el-registro-general-y-definimos-la-ruta-del-archivo-de-registro","title":"3.4 - Activamos el registro general y definimos la ruta del archivo de registro","text":"<p><code>SET GLOBAL slow_query_log_file = '/var/log/mysql/slow_query.log';</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#35-verificamos","title":"3.5 - Verificamos","text":"<p><code>SHOW VARIABLES LIKE 'slow_query_log'</code></p> <p></p> <p><code>SHOW VARIABLES LIKE 'long_query_time';</code></p> <p></p> <p><code>SHOW VARIABLES LIKE 'slow_query_log_file';</code></p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#35-documentamos-como-activar-y-desactivar-estos-registros-en-caliente","title":"3.5 - Documentamos c\u00f3mo activar y desactivar estos registros en caliente","text":"<p><code>SET GLOBAL slow_query_log = ON;</code></p> <p><code>SET GLOBAL slow_query_log = OFF;</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#4-gestion-de-las-conexiones-y-de-los-hilos","title":"4 - Gesti\u00f3n de las conexiones y de los hilos","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#41-ajustamos-el-numero-maximo-de-conexiones-concurrentes-para-garantizar-un-rendimiento-optimo","title":"4.1 - Ajustamos el n\u00famero m\u00e1ximo de conexiones concurrentes para garantizar un rendimiento \u00f3ptimo","text":"<p>En este ejemplo hemos configurado un ajuste de 333 y luego lo hemos comprobado:</p> <p></p> <p>Si quisiermoa que este cambio fuera persistente despu\u00e9s de un reinicio, editar\u00edamos el fichero de configuraci\u00f3n:</p> <p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>[mysqld]</code></p> <p><code>max_connections = xxx</code></p> <p>Descomentar\u00edamos el valor, guardando el cambio y reiniciando se servicio: <code>sudo systemctl restart mysql</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#42-configuramos-el-tiempo-de-espera-de-las-conexiones-para-evitar-saturaciones-del-sistema","title":"4.2 - Configuramos el tiempo de espera de las conexiones para evitar saturaciones del sistema","text":"<p>El par\u00e1metro <code>wait_timeout</code> define el tiempo en segundos que MySQL esperar\u00e1 antes de cerrar una conexi\u00f3n inactiva.</p> <ul> <li><code>wait_timeout</code> : Se aplica a las conexiones no interactivas (por ejemplo, conexiones abiertas por aplicaciones web).</li> <li><code>interactive_timeout</code> : Se aplica a las conexiones interactivas (por ejemplo, sesiones en la consola MySQL)</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#en-caliente-de-manera-temporal","title":"En caliente, de manera temporal","text":"<p><code>SET GLOBAL wait_timeout = 600;</code>  -- 10 minutos</p> <p></p> <p><code>SET GLOBAL interactive_timeout = 360;</code>  -- 6 minutos</p> <p></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#permanentemente","title":"Permanentemente","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>[mysqld]</code></p> <p><code>wait_timeout = 300</code></p> <p><code>interactive_timeout = 300</code></p> <p><code>sudo systemctl restart mysql</code></p> <p>Apreciaci\u00f3n: Valores muy bajos pueden cerrar conexiones antes de que se completen las operaciones, mientras que valores muy altos pueden llevar a una saturaci\u00f3n de conexiones inactivas.</p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#43-gestionamos-el-numero-de-hilos-disponibles-para-garantizar-una-correcta-concurrencia","title":"4.3 - Gestionamos el n\u00famero de hilos disponibles para garantizar una correcta concurrencia","text":"<p>Ajustar el n\u00famero de hilos disponibles puede mejorar la concurrencia, especialmente en sistemas con muchos n\u00facleos.</p> <ul> <li><code>thread_cache_size</code> : Define cu\u00e1ntos hilos se mantendr\u00e1n en cach\u00e9 para ser reutilizados, reduciendo la sobrecarga de creaci\u00f3n de hilos.</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#en-caliente-temporalmente","title":"En caliente, temporalmente","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#de-manera-constante","title":"De manera constante","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>[mysqld]</code></p> <p><code>thread_cache_size = 50</code></p> <p><code>sudo systemctl restart mysql</code></p> <ul> <li><code>innodb_thread_concurrency</code> : Limita el n\u00famero de hilos que pueden acceder simult\u00e1neamente al motor de almacenamiento InnoDB.</li> </ul>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#en-caliente-momentaneamente","title":"En caliente, moment\u00e1neamente","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#de-manera-fija","title":"De manera fija","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>[mysqld]</code></p> <p><code>innodb_thread_concurrency = 6</code></p> <p><code>sudo systemctl restart mysql</code></p>"},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#5-configuracion-de-la-memoria-cache","title":"5 - Configuraci\u00f3n de la memoria cach\u00e9","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#51-configura-la-memoria-cache-de-tablas-y-consultas-para-mejorar-la-eficiencia-de-las-operaciones","title":"5.1 - Configura la memoria cach\u00e9 de tablas y consultas para mejorar la eficiencia de las operaciones","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#en-caliente-de-momento","title":"En caliente, de momento","text":""},{"location":"PracUD4-Admin-Fine-Tuning-MySQL/Practica4_EduHernandez/#de-manera-estable","title":"De manera estable","text":"<p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>[mysqld]</code></p> <p>N\u00famero m\u00e1ximo de descriptores de tabla abiertos <code>table_open_cache = 2000</code></p> <p>N\u00famero m\u00e1ximo de definiciones de tabla que se pueden mantener en cach\u00e9 <code>table_definition_cache = 1500</code></p> <p>Documenta los ajustes realizados y sus efectos en el rendimiento.</p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/","title":"Pr\u00e1ctica tema 4. Usuarios, permisos y roles","text":""},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#instalacion","title":"Instalaci\u00f3n","text":"<ul> <li>Configuraremos una MV en AWS una con la instalaci\u00f3n de mysql-server con la BBDD de tatoo (master).</li> <li>Otra MV con mysql-client (laboratorio)</li> </ul>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#mv-aws-para-la-bbdd","title":"MV-AWS para la BBDD","text":""},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#mv-laboratorio","title":"MV-laboratorio","text":"<p>Para permitir que MySQL acepte conexiones desde cualquier IP, necesitamos modificar el archivo de configuraci\u00f3n de MySQL, espec\u00edficamente el par\u00e1metro <code>bind-address</code></p> <p>1.- Accedemos al Archivo de Configuraci\u00f3n de Mysql: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</code></p> <p>2.- Modificamos el par\u00e1metro <code>bind-address</code></p> <p>De <code>bind-address = 127.0.0.1</code> A <code>bind-address = 0.0.0.0</code></p> <p></p> <p><code>sudo systemctl restart mysql.service</code></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#copiamos-nuestra-bbdd","title":"Copiamos nuestra BBDD","text":"<p>Desde nuestro terminal de la MV de AWS donde tenemos instalado mysql:</p> <p><code>git clone https://github.com/datacharmer/test_db.git</code></p> <p></p> <p>La base de datos de empleados es compatible con varios motores de almacenamiento diferentes, con el motor InnoDB habilitado de forma predeterminada. Editamos el <code>employees.sql</code> archivo y ajustaremos los comentarios para elegir un motor de almacenamiento diferente:</p> <p><code>cd test_db</code></p> <p><code>sudo nano employes.sql</code></p> <p> </p> <p>Pero al final no guardamos esta configuraci\u00f3n solo la vemos para saber como cambiarla.</p> <p></p> <p>Para importar los datos a nuestra instancia de MySQL, cargaremos los datos a trav\u00e9s de la herramienta de l\u00ednea de comandos mysql:</p> <p><code>sudo mysql -t &lt; employees.sql</code></p> <p></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#validacion-de-los-datos-de-los-empleados","title":"Validaci\u00f3n de los datos de los empleados","text":"<p>Puede validar los datos del empleado mediante dos m\u00e9todos <code>md5</code> y <code>sha</code>. Se proporcionan dos scripts SQL para este prop\u00f3sito <code>test_employees_sha.sql</code> y <code>test_employees_md5.sql</code>. Para ejecutar las pruebas, usaremos mysql:</p> <p><code>sudo time mysql -t &lt; test_employees_sha.sql</code></p> <p></p> <p><code>sudo time mysql -t &lt; test_employees_md5.sql</code></p> <p></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#creacion-de-un-usuario-administrador","title":"Creaci\u00f3n de un usuario administrador","text":"<p>1.- Creamos un usuario que tenga todos los permisos sobre esta base de datos y adem\u00e1s tenga permiso para otorgar permiso a otros usuarios. Utiliza este usuario para realizar los puntos siguientes.</p> <p><code>sudo mysql -u root</code></p> <p><code>CREATE USER 'Sauron'@'localhost' IDENTIFIED BY 'Root_pass1';</code></p> <p><code>GRANT ALL PRIVILEGES ON *.* TO 'Sauron'@'localhost' WITH GRANT OPTION;</code></p> <p><code>GRANT CREATE USER ON *.* TO 'Sauron'@'localhost';</code></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#comprobamos","title":"Comprobamos","text":"<p><code>select user, host from mysql.user;</code></p> <p></p> <p><code>mysql -u Sauron -p</code></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#creacion-de-dos-usuarios","title":"Creaci\u00f3n de dos usuarios","text":"<p>2.- Creamos dos usuarios que tenga acceso de lectura a todas las tablas de la base de datos. Uno podr\u00e1 acceder desde cualquier punto y el segundo solo podr\u00e1 acceder desde la IP del cliente del laboratorio.</p> <p><code>CREATE USER 'totread'@'%' IDENTIFIED BY 'totread';</code></p> <p><code>GRANT SELECT ON employees.* TO 'totread'@'%';</code></p> <p><code>CREATE USER 'ipread'@'98.85.180.194' IDENTIFIED BY 'ipread';</code></p> <p><code>GRANT SELECT ON employees.* TO 'ipread'@'98.85.180.194';</code></p> <p>Verificamos los privilegios de los usuarios:</p> <p><code>SHOW GRANTS FOR 'totread'@'%';</code></p> <p><code>SHOW GRANTS FOR 'ipread'@'98.85.180.194';</code></p> <p></p> <p>3.- Creamos dos usuario que tenga acceso de lectura/escrituta a todas las tablas de la base de datos. Igual que antes uno solo acceder\u00e1 desde el cliente del laboratorio y el segundo desde cualquier punto.</p> <p><code>create user 'rwtot'@'%' identified by 'rwtot';</code></p> <p><code>GRANT SELECT, INSERT, UPDATE, DELETE ON employees.* TO 'rwtot'@'%';</code></p> <p><code>create user 'rwip'@'98.85.180.194' identified by 'rwip';</code></p> <p><code>GRANT SELECT, INSERT, UPDATE, DELETE ON employees.* TO 'rwip'@'98.85.180.194';</code></p> <p>Verificamos los privilegios de los usuarios.</p> <p><code>SHOW GRANTS FOR 'rwtot'@'%';</code></p> <p><code>SHOW GRANTS FOR 'rwip'@'98.85.180.194';</code></p> <p></p> <p>Comprobamos los usuarios creados.</p> <p><code>select user, host from mysql.user;</code></p> <p></p> <p>4.- Realizamos las pruebas necesarias para ver que estos usuarios acceden s\u00f3lo desde donde tienen permiso y que pueden o no pueden modificar la informaci\u00f3n en funci\u00f3n de los permisos otorgados.</p> <p>Desde el servidor-laboratorio nos conectamos al servidor de la BBDD employees, seleccionamos esta y dentro 5 empleados e intentamos borrar uno.</p> <p><code>mysql -u totread -p -h 98.85.147.99 -P 3306</code></p> <p><code>use employees;</code></p> <p><code>select * from employees limit 5;</code></p> <p><code>delete from employees where emp_no = 10001;</code></p> <p></p> <p>No podemos borrar el registro ya que el usuario <code>totread</code> solo tiene permisos de lectura.</p> <p>Desde el equipo anfitri\u00f3n nos intentamos conectar con el usuario que tiene permisos de lectura/escritura desde un IP (host) que no es la que tiene establecida para la conexi\u00f3n.</p> <p><code>mysql -u rwip -p -h 98.85.147.99 -P 3306</code></p> <p></p> <p>No podemos autentificar-nos ya que no estamos en la IP que se nos pide en la configuraci\u00f3n del usuario para conectarnos.</p> <p>Vamos a conectarnos con el usuario que si tiene permisos de lectura/escritura:</p> <p></p> <p>Si que hemos podido borrar ya que el usuario user-rw1 si tiene permisos de lectura y escritura, adem\u00e1s de poderse conectar desde cualquier punto.</p> <p>5.- Eliminamos las cuentas creadas en los puntos 2 y 3.</p> <p><code>mysql -u Sauron -p</code></p> <p><code>drop user 'totread'@'%';</code></p> <p><code>drop user 'rwtot'@'%';</code></p> <p><code>drop user 'ipread'@'98.85.180.194';</code></p> <p><code>drop user 'rwip'@'98.85.180.194';</code></p> <p><code>select user, host from mysql.user;</code></p> <p></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#creacion-de-roles","title":"Creaci\u00f3n de roles","text":"<p>1.- Creamos un rol que otorgue permisos de lectura sobre todas las tablas de la base de datos.</p> <p><code>create role leo_rol;</code></p> <p><code>grant select on employees.* to leo_rol;</code></p> <p></p> <p>2- .Creamos un rol que otorgue permisos de escritura sobre todos las tablas de la base de datos.</p> <p><code>create role write_rol;</code></p> <p><code>grant insert, update, delete on employees.* to write_rol;</code></p> <p></p> <p>3.- Creamos un usuario y le asignamos el rol de lectura.</p> <p><code>create user 'eduleo'@'%' identified by 'eduleo';</code></p> <p><code>grant leo_rol to 'eduleo'@'%';</code></p> <p> </p> <p>4.- Creamos un usuario y le asignamos el rol de escritura.</p> <p><code>create user 'escribano'@'%' identified by 'escribano';</code></p> <p><code>grant write_rol to 'escribano'@'%';</code></p> <p></p> <p>5.- Creamos un tercer usuario y le asignamos los dos roles.</p> <p><code>create user 'dosroles'@'%' identified by 'dosroles';</code></p> <p><code>grant leo_rol to 'dosroles'@'%';</code></p> <p><code>grant write_rol to 'dosroles'@'%';</code></p> <p></p> <p>El comando <code>SET DEFAULT ROLE ALL TO 'leo_rol'@'%', 'write_rol'@'%';</code> establece los roles predeterminados que se asignar\u00e1n autom\u00e1ticamente a un usuario cuando inicie sesi\u00f3n en MySQL.</p> <p><code>set default role all to 'leo_rol'@'%', 'write_rol'@'%';</code></p> <p>6.- Hacemos las pruebas pertinentes para ver los roles que tiene cada usuario.</p> <p><code>select user, host from mysql.user;</code></p> <p></p> <p>7.- Hacemos las pruebas pertinentes para ver que s\u00f3lo pueden realizar aquello para los que tienen los roles, desde el server-laboratorio.</p> <p>Accedemos a la BBDD con el usuario que tiene asignado el rol de lectura:</p> <p><code>mysql -u eduleo -p -h 98.85.147.99 -P 3306</code></p> <p></p> <p>Activamos el Rol de Lectura.</p> <p>El rol no est\u00e9 activo para nuestra sesi\u00f3n actual del usuario. Lo activamos manualmente:</p> <p><code>set role 'leo_rol';</code></p> <p></p> <p>Seleccionamos nuestra BBDD employees y listamos 5 empleados y al intentar borrar uno de ellos nos lo va a denegar ya que el usuario <code>eduleo</code> solo tiene permiso de lectura.</p> <p><code>use employees;</code></p> <p><code>select * from employees limit 5;</code></p> <p><code>delete from employees where emp_no = 10002;</code></p> <p></p> <p>Ahora accedemos a la BBDD con el usuario que tiene asignado el rol de escritura.</p> <p>Activamos el Rol de Escritura.</p> <p>El rol no est\u00e9 activo para nuestra sesi\u00f3n actual del usuario. Lo activamos    manualmente:</p> <p><code>set role 'write_rol';</code></p> <p>Seleccionamos nuestra BBDD employees e intentamos listar 5 empleados, pero nos lo va a denegar ya que el usuario <code>escribano</code> solo tiene asignados el rol de escritura y no de lectura, por lo que no podemos acceder.</p> <p><code>use employees;</code></p> <p><code>select * from employees limit 5;</code></p> <p></p> <p>Ahora accedemos a la BBDD con el usuario que tiene asignado los roles lectura/escritura.</p> <p><code>mysql -u dosroles -p -h 98.85.147.99 -P 3306</code></p> <p>Activamos los Roles de lectura/escritura.</p> <p>Los roles no estar\u00e1n activos para nuestra sesi\u00f3n actual del usuario. Los activamos manualmente:</p> <p><code>set role 'leo_rol';</code></p> <p><code>set role 'write_rol';</code></p> <p></p> <p>Seleccionamos nuestra BBDD employees e intentamos listar 5 empleados, pero nos lo impide a pesar de tener asignado los dos roles de lectura y escritura, por lo que vamos a generar un nuevo rol <code>readwr_rol</code>que integre todos los permisos para as\u00ed a ver si podemos arreglar esta situaci\u00f3n.</p> <p>Desde la terminal donde tenemos la BBDD.</p> <p>Accedemos con el usuario administrador <code>Sauron</code>:</p> <p><code>mysql -u Sauron -p</code></p> <p>Creamos el nuevo rol <code>readwr-rol</code>, le damos los permisos de lectura/escritura en un solo comando y se lo asignamos al usuario <code>dosroles</code>:</p> <p><code>create role readwr_rol;</code></p> <p><code>grant select, insert, update, delete on employees.* to readwr_rol;</code></p> <p><code>grant readwr_rol to 'dosroles'@'%';</code></p> <p></p> <p>Desde la terminal de nuestro server <code>laboratorio</code> accedemos con el usuario <code>dosroles</code></p> <p><code>mysql -u dosroles -p -h 98.85.147.99 -P 3306</code></p> <p></p> <p>Como el rol no estar\u00e1 activo para nuestra sesi\u00f3n actual del usuario. Lo activamos manualmente:</p> <p><code>set role 'readwr_rol';</code></p> <p></p> <p>Seleccionamos nuestra BBDD employees y listamos 5 empleados, y vemos que podemos borrar un usuario ya que adem\u00e1s de poder acceder con el rol que contiene <code>select</code> tambi\u00e9n podemos borrar ya que el mismo rol contiene <code>delete</code>.</p> <p><code>use employess;</code></p> <p><code>select * from employees limit 5;</code></p> <p><code>delete from employees where emp_no = 10002;</code></p> <p><code>select * from employees limit 5;</code></p> <p></p>"},{"location":"PracUD4-usuarios-permisos-roles/prac4-usuarios-permisos-roles/#conclusiones","title":"Conclusiones","text":"<p>1.- Como administrador de base de datos:</p> <ol> <li> <p>\u00bfUsar\u00edas roles a la hora de administrar un servidor de base de datos? Si, evitamos otorgar privilegios individualmente a posiblemente muchas cuentas de usuario y creando roles con nombres para los conjuntos de privilegios requeridos nos facilitar\u00e1 la concesi\u00f3n de los privilegios necesarios a las cuentas de usuario mediante la concesi\u00f3n de los roles adecuados.</p> </li> <li> <p>\u00bfQu\u00e9 ventajas ves al uso de roles?</p> </li> <li>Gestionamos los permisos simplificadamente.</li> <li>Controlamos el establecimiento de permisos para mejorar la seguridad.</li> <li>La escalabilidad no nos afectar\u00eda ya que los roles asignados en conjunto controlar\u00edan ese inconveniente.</li> <li>Mantenimiento m\u00e1s simplificado, al realizar los cambios sobre los roles y no sobre los permisos.</li> </ol>"}]}